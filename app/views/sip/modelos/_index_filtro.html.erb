
<tr>
  <% atributos_index.each do |atr| %>
    <% #debugger %>
    <td>
      <% cregistro = @registro.class.to_s.chomp("::ActiveRecord_Relation").constantize %>
      <% alf = cregistro == NilClass ? nil : cregistro.asociacion_llave_foranea(atr) %>
      <% atrf = Sip::ModeloHelper.nom_filtro(atr) %>
      <% atrsl= atrf.chomp('_localizada').chomp('_localizado') %>
      <% n = "bus#{atrf}" %>
      <% respfiltro = cregistro.respond_to?("filtro_#{atrf}") || 
        cregistro.respond_to?("filtro_#{atrf}ini") || 
        cregistro.respond_to?("filtro_#{atrf}fin") ||
        cregistro.respond_to?("filtro_#{atrsl}") || 
        cregistro.respond_to?("filtro_#{atrsl}ini") || 
        cregistro.respond_to?("filtro_#{atrsl}fin")
      %>
      <% (ri, rm, rd)=cregistro.name.pluralize.underscore.rpartition("/") %>
      <% pr = ri + "/admin/" + rd %>
      <% if lookup_context.find_all("filtro_#{atrf}", 
                                    [cregistro.name.pluralize.underscore], true).any? %>
        <% # Hay un parcial para presentar el campo, 
           #e.g cor1440_gen/proyectosfinancieros/_filtro_estado.html.erb %>
        <%= render partial: "filtro_#{atrf}", locals: {f: f} %>
      <% elsif lookup_context.find_all(
        "filtro_#{atrf}", ['admin/' + 
                           cregistro.name.pluralize.underscore], true).any? %>
        <%  #e.g sip/admin/orgsocial/_filtro_lineabase20182020.html.erb %>
        <%= render partial: "admin/#{cregistro.name.pluralize.underscore}/" +
        "filtro_#{atrf}", locals: {f: f} %>
      <% elsif lookup_context.find_all("filtro_#{atrf}", [pr], true).any? %>
        <%  #e.g sip/admin/municipios/_filtro_pais.html.erb %>
        <%= render partial: "#{pr}/filtro_#{atrf}", locals: {f: f} %>
      <% elsif lookup_context.find_all(
        "#{atrf}", [cregistro.name.pluralize.underscore], true).any? %>
        <% # Hay un parcial para presentar el campo, 
         # e.g cor1440_gen/proyectosfinancieros/_estado.html.erb %>
        <%= render partial: "#{atrf}", locals: {f: f} %>
      <% elsif lookup_context.find_all(
          "filtro_#{atrf}", ['sip/modelos'], true).any? %>
        <%  #e.g sip/admin/orgsocial/_filtro_habilitado.html.erb %>
        <%= render partial: "sip/modelos/filtro_#{atrf}", locals: {f: f} %>
      <% elsif alf && respfiltro %>
        <% # Es llave Foranea %>
          <% 
          col = alf.class_name.constantize.all
          if col.respond_to?(:habilitados)
            col = col.habilitados
          end 
        %>
        <%= f.input n,
        collection: col,
        label: false,
        include_blank: true,
        label_method: :presenta_nombre,
        value_method: :id,
        selected: Sip::ModeloHelper.poromision(params, n),
        input_html: { 
          class: 'chosen-select',
          "data-enviarautomatico" => "" } 
        %>
    <% elsif defined?(cregistro.asociacion_combinada) && 
      cregistro.asociacion_combinada(atr) && respfiltro %>
      <% # Tabla Combinada 
        r = cregistro.asociacion_combinada(atr)
      %>
      <% if r.class.to_s == 
          'ActiveRecord::Reflection::ThroughReflection' ||
          r.class.to_s == 
          'ActiveRecord::Reflection::HasAndBelongsToManyReflection' %>
        <% # Tabla combinada %>
        <% col = r.class_name.constantize.respond_to?(:habilitados) ?
              r.class_name.constantize.habilitados :
              r.class_name.constantize.all %>
        <%= f.input n,
          collection: col,
          label: false,
          include_blank: true,
          label_method: :presenta_nombre,
          value_method: :id ,
          selected: Sip::ModeloHelper.poromision(params, n),
          input_html: { class: 'chosen-select',
                        "data-enviarautomatico" => "" } %>
      <% end %>
    <% elsif defined?(cregistro.columns_hash[atrsl]) && respfiltro %>
      <% # Escogemos el control %>
      <% col = cregistro.columns_hash[atrsl] %>
      <% if col && (col.type == :date || col.type == :datetime) then %>
        <% # byebug %>
        <% # fecha %>
        <% # el control estandar de fechas HTML siempre responde con %>
        <% # fecha en formato yyyy-mm-dd %>
        <% if atrf.ends_with?('_localizada') %>
          <% atrf = atrf.slice(0, atrf.length-11) %>
          <% n = "bus#{atrf}" %>
        <% end %>
        <% if cregistro.respond_to?("filtro_#{atrf}ini") &&
             cregistro.respond_to?("filtro_#{atrf}fin") %>
           <%= f.input "#{n}ini",
             label: false,
             :input_html => { 
               type: "date",
               "data-enviarautomatico" => "",
               placeholder: 'Inicial',
               value: Sip::ModeloHelper.poromision(params, "#{n}ini"),
             }, 
             :as => :string %> - 
           <%= f.input "#{n}fin",
             label: false,
             :input_html => { 
               "type" => "date",
               "data-enviarautomatico" => "",
               placeholder: 'Final',
               value: Sip::ModeloHelper.poromision(params, "#{n}fin")
             }, 
             :as => :string %> 
         <% else %>
           <%= f.input "#{n}",
             label: false,
             :input_html => { 
               "type" => "date",
               "data-enviarautomatico" => "",
               value: Sip::ModeloHelper.poromision(params, "#{n}")
             }, 
             :as => :string %> 
         <% end %>
      <% elsif col && col.type == :integer %>
        <% if cregistro.respond_to?("filtro_#{atrf}ini") &&
             cregistro.respond_to?("filtro_#{atrf}fin") %>
           <%= f.input "#{n}ini",
             label: false,
             :input_html => { 
               value: Sip::ModeloHelper.poromision(params, "#{n}ini"),
               "data-enviarautomatico" => "",
               size: 5
             }, 
             as: :integer %>  -
           <%= f.input "#{n}fin",
             label: false,
             :input_html => { 
               value: Sip::ModeloHelper.poromision(params, "#{n}fin"),
               "data-enviarautomatico" => "",
               size: 5
               },
               as: :integer %>
         <% else %>
           <%= f.input n,
             label: false,
             :input_html => { 
               value: Sip::ModeloHelper.poromision(params, "#{n}"),
               "data-enviarautomatico" => "",
               type: :text,
               style: 'width: 4em'
             }, 
             as: :integer %>
         <% end %>
      <% elsif col && col.type == :decimal%>
        <% if cregistro.respond_to?("filtro_#{atrf}ini") &&
             cregistro.respond_to?("filtro_#{atrf}fin") %>
           <%= f.input "#{n}ini",
             label: false,
             :input_html => { 
               "data-enviarautomatico" => "",
               value: Sip::ModeloHelper.poromision(params, "#{n}ini"),
             }, 
             :as => :string %> - 
           <%= f.input "#{n}fin",
             label: false,
             :input_html => { 
               "data-enviarautomatico" => "",
               value: Sip::ModeloHelper.poromision(params, "#{n}fin")
             }, 
             :as => :string %> 
         <% else %>
         <% end %>
      <% elsif col && !col.limit.nil? && col.limit.to_i > 1000 %>
        <%= f.input n,
          label: false,
          as: :text, 
          :input_html => { 
            "data-enviarautomatico" => "",
            value: Sip::ModeloHelper.poromision(params, "#{n}")
          } %>
      <% else %>
        <%= f.input n, 
          label: false,
          :input_html => { 
            "data-enviarautomatico" => "",
            value: Sip::ModeloHelper.poromision(params, "#{n}")
          } %>
      <% end %>
    <% elsif respfiltro %>
      <%= f.input n, 
        label: false,
        :input_html => { 
          "data-enviarautomatico" => "",
          value: Sip::ModeloHelper.poromision(params, "#{n}")
        } %>
    <% end %>
    </td>
  <% end %>
  
  <td>
    <%= render partial: 'index_filtro_controles', locals: {f: f} %>
  </td>

</tr>
