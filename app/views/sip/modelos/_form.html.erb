<% if @registro.nil? %>
  <% return %>
<% end %>
<%= simple_form_for @registro, 
    url: modelo_path(@registro),
    defaults: { input_html: { class: 'span10' } } do |f| 
%>
  <%= render partial: 'sip/hogar/errores', locals: { f: f } %> 

  <% atributos_form.each do |atr|  %>
    <% vatr = atr.to_s.gsub(/[^a-z_A-Z0-9]/, '') %>
    <% rutavatr = clase.pluralize.underscore + "/campo_#{vatr}" %>
    <% (ri, rm, rd)=clase.pluralize.underscore.rpartition("/") %>
    <% radmin = "#{ri}/admin/#{rd}/campo_#{vatr}" %>
    <% #byebug %>
    <% if lookup_context.find_all(rutavatr, [], true).any? %>
      <% # Hay un parcial especifico %>
      <%= render partial: rutavatr, locals: {f: f} %>
    <% elsif lookup_context.find_all(radmin, [], true).any? %>
      <% # Hay un parcial especifico %>
      <%= render partial: radmin, locals: {f: f} %>
    <% elsif lookup_context.find_all("sip/modelos/#{vatr}", [], true).any? %>
      <% # Hay un parcial generico %>
      <%= render partial: "sip/modelos/#{vatr}", locals: {f: f} %>
    <% elsif lookup_context.find_all("sip/modelos/campo_#{vatr}", [], true).any? %>
      <% # Hay un parcial generico %>
      <%= render partial: "sip/modelos/campo_#{vatr}", locals: {f: f} %>
    <%else # Se genera el campo automaticamente %>
      <%= render partial: 'sip_campo_aut', locals: {f: f, atr: atr} %>
    <% end %>
  <% end %>

  <div class="form-actions">
    <% if controller.registrar_en_bitacora %>
      <% regcorto = clase.demodulize.underscore %>
      <input class='bitacora_cambio' id='<%= regcorto %>_bitacora_cambio' 
             name='<%= regcorto %>[bitacora_cambio]' type='hidden'>
    <% end %>
    <%= f.button :submit, (f.object.new_record? ? 'Crear' : 'Actualizar'), 
      :class => 'btn-primary' 
    %>
    <%= render partial: 'form_btncancelar' %>
  </div>
  
<% end %>
